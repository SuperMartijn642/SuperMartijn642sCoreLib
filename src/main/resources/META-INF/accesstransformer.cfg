# AbstractContainerScreen
public-f net.minecraft.world.inventory.AbstractContainerMenu containerId
protected net.minecraft.client.gui.screens.inventory.AbstractContainerScreen draggingItem
protected net.minecraft.client.gui.screens.inventory.AbstractContainerScreen isSplittingStack
protected net.minecraft.client.gui.screens.inventory.AbstractContainerScreen quickCraftingRemainder
protected net.minecraft.client.gui.screens.inventory.AbstractContainerScreen snapbackEnd
protected net.minecraft.client.gui.screens.inventory.AbstractContainerScreen snapbackItem
protected net.minecraft.client.gui.screens.inventory.AbstractContainerScreen snapbackStartX
protected net.minecraft.client.gui.screens.inventory.AbstractContainerScreen snapbackStartY
protected net.minecraft.client.gui.screens.inventory.AbstractContainerScreen snapbackTime
protected net.minecraft.client.gui.screens.inventory.AbstractContainerScreen renderFloatingItem(Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/world/item/ItemStack;IILjava/lang/String;)V
public net.minecraft.client.gui.screens.inventory.AbstractContainerScreen renderSlot(Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/world/inventory/Slot;)V
# BlockBehaviour
public net.minecraft.world.level.block.state.BlockBehaviour properties
# BlockBehaviour$Properties
public net.minecraft.world.level.block.state.BlockBehaviour$Properties drops
public net.minecraft.world.level.block.state.BlockBehaviour$Properties hasCollision
public net.minecraft.world.level.block.state.BlockBehaviour$Properties lightEmission
# public net.minecraft.world.level.block.state.BlockBehaviour$Properties isRedstoneConductor
public net.minecraft.world.level.block.state.BlockBehaviour$Properties isSuffocating
public net.minecraft.world.level.block.state.BlockBehaviour$Properties mapColor
# CreativeModeTab
public net.minecraft.world.item.CreativeModeTab displayItems
public-f net.minecraft.world.item.CreativeModeTab displayItemsGenerator
# DataGenerator
public net.minecraft.data.DataGenerator rootOutputFolder
# GameRenderer
public net.minecraft.client.renderer.GameRenderer renderBuffers
# GuiGraphics
public-f net.minecraft.client.gui.GuiGraphics minecraft
public-f net.minecraft.client.gui.GuiGraphics pose
public-f net.minecraft.client.gui.GuiGraphics bufferSource
public net.minecraft.client.gui.GuiGraphics renderTooltipInternal(Lnet/minecraft/client/gui/Font;Ljava/util/List;IILnet/minecraft/client/gui/screens/inventory/tooltip/ClientTooltipPositioner;)V
# HashCache
public net.minecraft.data.HashCache cachePaths
public net.minecraft.data.HashCache caches
public net.minecraft.data.HashCache cachesToWrite
public-f net.minecraft.data.HashCache initialCount
public net.minecraft.data.HashCache versionId
public net.minecraft.data.HashCache getProviderCachePath(Ljava/lang/String;)Ljava/nio/file/Path;
public net.minecraft.data.HashCache readCache(Ljava/nio/file/Path;Ljava/nio/file/Path;)Lnet/minecraft/data/HashCache$ProviderCache;
# HashCache$ProviderCache
public net.minecraft.data.HashCache$ProviderCache <init>(Ljava/lang/String;Lcom/google/common/collect/ImmutableMap;)V
public net.minecraft.data.HashCache$ProviderCache
# RecipeManager
public net.minecraft.world.item.crafting.RecipeManager fromJson(Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/RecipeHolder;
# RenderType
public net.minecraft.client.renderer.RenderType sortOnUpload
# TagEntry
public-f net.minecraft.tags.TagEntry CODEC
public net.minecraft.tags.TagEntry <init>(Lnet/minecraft/resources/ResourceLocation;ZZ)V

accessWidener v1 named

# AbstractContainerScreen
accessible field net/minecraft/client/gui/screens/inventory/AbstractContainerScreen draggingItem Lnet/minecraft/world/item/ItemStack; # draggingItem
accessible field net/minecraft/client/gui/screens/inventory/AbstractContainerScreen isSplittingStack Z # isSplittingStack
accessible field net/minecraft/client/gui/screens/inventory/AbstractContainerScreen quickCraftingRemainder I # quickCraftingRemainder
accessible field net/minecraft/client/gui/screens/inventory/AbstractContainerScreen SLOT_HIGHLIGHT_BACK_SPRITE Lnet/minecraft/resources/ResourceLocation;
accessible field net/minecraft/client/gui/screens/inventory/AbstractContainerScreen SLOT_HIGHLIGHT_FRONT_SPRITE Lnet/minecraft/resources/ResourceLocation;
accessible field net/minecraft/client/gui/screens/inventory/AbstractContainerScreen snapbackEnd Lnet/minecraft/world/inventory/Slot; # snapbackEnd
accessible field net/minecraft/client/gui/screens/inventory/AbstractContainerScreen snapbackItem Lnet/minecraft/world/item/ItemStack; # snapbackItem
accessible field net/minecraft/client/gui/screens/inventory/AbstractContainerScreen snapbackStartX I # snapbackStartX
accessible field net/minecraft/client/gui/screens/inventory/AbstractContainerScreen snapbackStartY I # snapbackStartY
accessible field net/minecraft/client/gui/screens/inventory/AbstractContainerScreen snapbackTime J # snapbackTime
accessible method net/minecraft/client/gui/screens/inventory/AbstractContainerScreen renderFloatingItem (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/world/item/ItemStack;IILjava/lang/String;)V # renderFloatingItem
accessible method net/minecraft/client/gui/screens/inventory/AbstractContainerScreen renderSlot (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/world/inventory/Slot;)V # renderSlot
# AbstractContainerMenu
mutable field net/minecraft/world/inventory/AbstractContainerMenu containerId I # containerId
# BlockBehaviour
accessible field net/minecraft/world/level/block/state/BlockBehaviour properties Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; # properties
extendable method net/minecraft/world/level/block/state/BlockBehaviour getDescriptionId ()Ljava/lang/String;
extendable method net/minecraft/world/level/block/state/BlockBehaviour getLootTable ()Ljava/util/Optional;
mutable field net/minecraft/world/level/block/state/BlockBehaviour drops Ljava/util/Optional;
mutable field net/minecraft/world/level/block/state/BlockBehaviour descriptionId Ljava/lang/String;
# BlockBehaviour$Properties
accessible field net/minecraft/world/level/block/state/BlockBehaviour$Properties drops Lnet/minecraft/resources/DependantName;
accessible field net/minecraft/world/level/block/state/BlockBehaviour$Properties descriptionId Lnet/minecraft/resources/DependantName;
accessible field net/minecraft/world/level/block/state/BlockBehaviour$Properties soundType Lnet/minecraft/world/level/block/SoundType; # soundType
accessible field net/minecraft/world/level/block/state/BlockBehaviour$Properties hasCollision Z # hasCollision
accessible field net/minecraft/world/level/block/state/BlockBehaviour$Properties lightEmission Ljava/util/function/ToIntFunction; # lightEmission
accessible field net/minecraft/world/level/block/state/BlockBehaviour$Properties isRandomlyTicking Z # isRandomlyTicking
accessible field net/minecraft/world/level/block/state/BlockBehaviour$Properties isRedstoneConductor Lnet/minecraft/world/level/block/state/BlockBehaviour$StatePredicate; # isRedstoneConductor
accessible field net/minecraft/world/level/block/state/BlockBehaviour$Properties isSuffocating Lnet/minecraft/world/level/block/state/BlockBehaviour$StatePredicate; # isSuffocating
accessible field net/minecraft/world/level/block/state/BlockBehaviour$Properties mapColor Ljava/util/function/Function; # mapColor
# BlockEntityType
accessible method net/minecraft/world/level/block/entity/BlockEntityType <init> (Lnet/minecraft/world/level/block/entity/BlockEntityType$BlockEntitySupplier;Ljava/util/Set;)V
# BlockEntityType$BlockEntitySupplier
extendable class net/minecraft/world/level/block/entity/BlockEntityType$BlockEntitySupplier
# CreativeModeTab
accessible field net/minecraft/world/item/CreativeModeTab displayItems Ljava/util/Collection; # displayItems
accessible field net/minecraft/world/item/CreativeModeTab displayItemsGenerator Lnet/minecraft/world/item/CreativeModeTab$DisplayItemsGenerator; # displayItemsGenerator
accessible method net/minecraft/world/item/CreativeModeTab <init> (Lnet/minecraft/world/item/CreativeModeTab$Row;ILnet/minecraft/world/item/CreativeModeTab$Type;Lnet/minecraft/network/chat/Component;Ljava/util/function/Supplier;Lnet/minecraft/world/item/CreativeModeTab$DisplayItemsGenerator;)V # constructor
mutable field net/minecraft/world/item/CreativeModeTab displayItemsGenerator Lnet/minecraft/world/item/CreativeModeTab$DisplayItemsGenerator; # displayItemsGenerator
# DataGenerator
accessible field net/minecraft/data/DataGenerator rootOutputFolder Ljava/nio/file/Path; # rootOutputFolder
# GameRenderer
accessible field net/minecraft/client/renderer/GameRenderer renderBuffers Lnet/minecraft/client/renderer/RenderBuffers;
# GuiGraphics
accessible field net/minecraft/client/gui/GuiGraphics minecraft Lnet/minecraft/client/Minecraft; # minecraft
accessible field net/minecraft/client/gui/GuiGraphics pose Lcom/mojang/blaze3d/vertex/PoseStack; # pose
accessible field net/minecraft/client/gui/GuiGraphics bufferSource Lnet/minecraft/client/renderer/MultiBufferSource$BufferSource; # bufferSource
accessible method net/minecraft/client/gui/GuiGraphics renderTooltipInternal (Lnet/minecraft/client/gui/Font;Ljava/util/List;IILnet/minecraft/client/gui/screens/inventory/tooltip/ClientTooltipPositioner;Lnet/minecraft/resources/ResourceLocation;)V
mutable field net/minecraft/client/gui/GuiGraphics minecraft Lnet/minecraft/client/Minecraft; # minecraft
mutable field net/minecraft/client/gui/GuiGraphics pose Lcom/mojang/blaze3d/vertex/PoseStack; # pose
mutable field net/minecraft/client/gui/GuiGraphics bufferSource Lnet/minecraft/client/renderer/MultiBufferSource$BufferSource; # bufferSource
# HashCache
accessible field net/minecraft/data/HashCache cachePaths Ljava/util/Set; # cachePaths
accessible field net/minecraft/data/HashCache caches Ljava/util/Map; # caches
accessible field net/minecraft/data/HashCache cachesToWrite Ljava/util/Set; # cachesToWrite
accessible field net/minecraft/data/HashCache initialCount I # initialCount
accessible field net/minecraft/data/HashCache versionId Ljava/lang/String; # versionId
accessible method net/minecraft/data/HashCache getProviderCachePath (Ljava/lang/String;)Ljava/nio/file/Path; # getProviderCachePath
accessible method net/minecraft/data/HashCache readCache (Ljava/nio/file/Path;Ljava/nio/file/Path;)Lnet/minecraft/data/HashCache$ProviderCache; # readCache
mutable field net/minecraft/data/HashCache initialCount I # initialCount
# HashCache$CacheUpdater
accessible field net/minecraft/data/HashCache$CacheUpdater newCache Lnet/minecraft/data/HashCache$ProviderCacheBuilder; # newCache
accessible field net/minecraft/data/HashCache$CacheUpdater oldCache Lnet/minecraft/data/HashCache$ProviderCache; # oldCache
accessible field net/minecraft/data/HashCache$CacheUpdater writes Ljava/util/concurrent/atomic/AtomicInteger; # writes
accessible class net/minecraft/data/HashCache$CacheUpdater
# HashCache$ProviderCache
accessible method net/minecraft/data/HashCache$ProviderCache <init> (Ljava/lang/String;Lcom/google/common/collect/ImmutableMap;)V # <init>
accessible class net/minecraft/data/HashCache$ProviderCache
# HashCache$ProviderCacheBuilder
accessible class net/minecraft/data/HashCache$ProviderCacheBuilder
# Holder$Reference
accessible method net/minecraft/core/Holder$Reference bindKey (Lnet/minecraft/resources/ResourceKey;)V # bindKey
# Item
accessible field net/minecraft/world/item/Item components Lnet/minecraft/core/component/DataComponentMap;
extendable method net/minecraft/world/item/Item getDescriptionId ()Ljava/lang/String;
mutable field net/minecraft/world/item/Item components Lnet/minecraft/core/component/DataComponentMap;
mutable field net/minecraft/world/item/Item descriptionId Ljava/lang/String;
# ItemRenderer
accessible method net/minecraft/client/renderer/entity/ItemRenderer renderModelLists (Lnet/minecraft/client/resources/model/BakedModel;Lnet/minecraft/world/item/ItemStack;IILcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;)V # renderModelLists
# ItemTransform$Deserializer
accessible field net/minecraft/client/renderer/block/model/ItemTransform$Deserializer DEFAULT_ROTATION Lorg/joml/Vector3f; # DEFAULT_ROTATION
accessible field net/minecraft/client/renderer/block/model/ItemTransform$Deserializer DEFAULT_TRANSLATION Lorg/joml/Vector3f; # DEFAULT_TRANSLATION
accessible field net/minecraft/client/renderer/block/model/ItemTransform$Deserializer DEFAULT_SCALE Lorg/joml/Vector3f; # DEFAULT_SCALE
accessible class net/minecraft/client/renderer/block/model/ItemTransform$Deserializer
# Minecraft
accessible field net/minecraft/client/Minecraft options Lnet/minecraft/client/Options; # options
accessible field net/minecraft/client/Minecraft resourcePackRepository Lnet/minecraft/server/packs/repository/PackRepository; # resourcePackRepository
# ModelManager$ReloadState
accessible class net/minecraft/client/resources/model/ModelManager$ReloadState
# Player
accessible method net/minecraft/world/entity/player/Player closeContainer ()V # closeContainer
# RecipeManager
accessible method net/minecraft/world/item/crafting/RecipeManager fromJson (Lnet/minecraft/resources/ResourceKey;Lcom/google/gson/JsonObject;Lnet/minecraft/core/HolderLookup$Provider;)Lnet/minecraft/world/item/crafting/RecipeHolder;
# TagEntry
accessible field net/minecraft/tags/TagEntry CODEC Lcom/mojang/serialization/Codec;
accessible field net/minecraft/tags/TagEntry id Lnet/minecraft/resources/ResourceLocation;
accessible field net/minecraft/tags/TagEntry required Z
accessible field net/minecraft/tags/TagEntry tag Z
accessible method net/minecraft/tags/TagEntry <init> (Lnet/minecraft/resources/ResourceLocation;ZZ)V
mutable field net/minecraft/tags/TagEntry CODEC Lcom/mojang/serialization/Codec;

# Append the generated entries
# generated

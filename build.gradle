plugins {
    id "fabric-loom" version "0.11-SNAPSHOT"
}

version = project.mod_version + "-fabric-" + project.minecraft_suffix
group = project.maven_group
archivesBaseName = project.mod_id

sourceCompatibility = JavaLanguageVersion.of(project.java_target)
targetCompatibility = JavaLanguageVersion.of(project.java_target)

println("Java: " + System.getProperty("java.version") + " JVM: " + System.getProperty("java.vm.version") + "(" + System.getProperty("java.vendor") + ") Arch: " + System.getProperty("os.arch"))

repositories {
    maven {
        url "https://www.cursemaven.com"
    }
}

dependencies {
    // Minecraft
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    // Official mappings
    mappings loom.officialMojangMappings()

    // Fabric Loader
    modImplementation "net.fabricmc:fabric-loader:${project.fabric_loader_version}"
    // Fabric API
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir "src/generated/resources" }

processResources {
    inputs.property "version", project.version

    filesMatching(["fabric.mod.json", "modid.mixins.json", "pack.mcmeta"]) {
        expand project.properties
    }

    exclude "**/*.pdn"

    rename "^icon.png\$", "${project.mod_id}.png"
    rename "^modid.accesswidener\$", "${project.mod_id}.accesswidener"
    rename "^modid.mixins.json\$", "${project.mod_id}.mixins.json"
}

loom {
    accessWidenerPath = file("src/main/resources/modid.accesswidener")

    // TODO make test classes get loaded somehow ¯\(o_o)/¯
//    runs {
//        client {
//            source = sourceSets.test
//        }
//    }
//    runConfigs.configureEach {
//        source = sourceSets.test
//    }

//    runs {
//        testmodClient {
//            client()
//            name = "Testmod Client"
//            source sourceSets.test
//        }
//        testmodServer {
//            server()
//            name = "Testmod Server"
//            source sourceSets.test
//        }
//    }
}

tasks.withType(JavaCompile).configureEach {
    // Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
    it.options.release = Integer.parseInt((String) project.java_target)
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}
